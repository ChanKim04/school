;;; factorial.el computes a factorial.
;;;
;;; Input: n, one integer.
;;; PRE: n >= 0
;;; Output: A factorial from n inputted value.
;;;
;;; Completed by: Chan Kim (ck45)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; factorial() recursively generates the factorial.                  ;;;
;;; Receive: val is n for factorial;                                  ;;;
;;;             i is for checking recursive loop. it starts with 2    ;;;
;;;             answer is for the return value of factorial           ;;;
;;; Output: A factorial from the input value.                         ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun factorial (val i answer)
    (if (<= i val)
        (factorial val (+ i 1) (* answer i))
    (if (> i val)
	(progn (princ val)
	       (princ "! = ")
	       (princ answer)
	       (terpri)))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; main is a 'driver' for factorial()                         ;;;
;;; Input: n                                                   ;;;
;;; Output: A factorial from n value                           ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defun main (n)
  "print a factorial"
   (interactive "nTo compute n!, enter n: \n")
   (factorial n 2 1))

;;; Test...
(main 1)
1! = 1
t
(main 2)
2! = 2
t
(main 3)
3! = 6
t
(main 4)
4! = 24
t
(main 5)
5! = 120
t
(main 6)
6! = 720
t
(main 7)
7! = 5040
t




























