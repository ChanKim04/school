Script started on 2018-02-24 23:31:16-0500
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ca[K[Kls
 [0m[01;32mfactorial[0m       factorial.ali    '#factorial.el#'   factorial.el~    factorial.o    script.java
 factorial.adb   Factorial.class   factorial.el      Factorial.java   factorial.rb
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ cat Factorial.java
/* Factorial.java computes a factorial.
 *
 * Input: n, one integer.
 * PRE: n >= 0
 * Output: A factorial from n inputted value.
 * Completed by: Chan Kim (ck45)
 ********************************************************/
import java.util.Scanner; 		// Get input

class Factorial{

  public static void main(String[] args){
    Scanner keyboard = new Scanner(System.in);
    System.out.println("To compute n!, enter n: ");
    double n, answer;
    n = keyboard.nextDouble();

    answer = 1.0;
    // for loop to compute a factorial
  for (int i = 2; i <= n; i++)
  {
    answer *= i;
  }
    // output the result of the factorial
      System.out.println(n + "! = " + answer);
  }
}

]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ favac -depreca[K[K[K[K[K[K[K[K[K[K[K[K[K[Kjavac -deprecation[Kn Factorial.java 
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ java Factorial 
To compute n!, enter n: 
2
2.0! = 2.0
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ java Factorial 
To compute n!, enter n: 
3
3.0! = 6.0
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ java Factorial 
To compute n!, enter n: 
4
4.0! = 24.0
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ java Factorial 
To compute n!, enter n: 
6
6.0! = 720.0
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ java Factorial 
To compute n!, enter n: 
7
7.0! = 5040.0
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ exit
exit

Script done on 2018-02-24 23:32:29-0500
Script started on 2018-02-24 23:33:45-0500
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ cat factoriala[K.a
factorial.adb  factorial.ali  
[chan@chan 04]$ cat factorial.adb 
-- factorial.adb computes a factorial.
--
-- Input: n, one integer.
-- Precondition: n >= 0
-- Output: A factorial from n inputted value.
--
-- Completed by: Chan Kim (ck45)
--------------------------------------------------------------

with Ada.Text_IO, Ada.Integer_Text_IO;
use  Ada.Text_IO, Ada.Integer_Text_IO;

procedure factorial is

   n, answer: Integer;

begin                                           -- Prompt for input
   Put("To compute n!, enter n: ");
   Get(n);
   answer := 1;
   -- for loop to compute a factorial
for i in 2..n loop
    answer := answer*i;
end loop;
    -- output the result of the factorial
    Put(n);
    Put("! = ");
    Put(answer);
end factorial;

]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ gnatmake factorial.adb 
gcc -c factorial.adb
gnatbind -x factorial.ali
gnatlink factorial.ali
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ./factorial 
To compute n!, enter n: 1
          1! =           1
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ./factorial 
To compute n!, enter n: 2
          2! =           2
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ./factorial 
To compute n!, enter n: 3
          3! =           6
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ./factorial 
To compute n!, enter n: 4
          4! =          24
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ./factorial 
To compute n!, enter n: 5
          5! =         120
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ./factorial 
To compute n!, enter n: 6
          6! =         720
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ./factorial 
To compute n!, enter n: 7
          7! =        5040
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ exit
exit

Script done on 2018-02-24 23:34:21-0500
;;; factorial.el computes a factorial.
;;;
;;; Input: n, one integer.
;;; PRE: n >= 0
;;; Output: A factorial from n inputted value.
;;;
;;; Completed by: Chan Kim (ck45)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; factorial() recursively generates the factorial.                  ;;;
;;; Receive: val is n for factorial;                                  ;;;
;;;             i is for checking recursive loop. it starts with 2    ;;;
;;;             answer is for the return value of factorial           ;;;
;;; Output: A factorial from the input value.                         ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun factorial (val i answer)
    (if (<= i val)
        (factorial val (+ i 1) (* answer i))
    (if (> i val)
	(progn (princ val)
	       (princ "! = ")
	       (princ answer)
	       (terpri)))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; main is a 'driver' for factorial()                         ;;;
;;; Input: n                                                   ;;;
;;; Output: A factorial from n value                           ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defun main (n)
  "print a factorial"
   (interactive "nTo compute n!, enter n: \n")
   (factorial n 2 1))

;;; Test...
(main 1)
1! = 1
t
(main 2)
2! = 2
t
(main 3)
3! = 6
t
(main 4)
4! = 24
t
(main 5)
5! = 120
t
(main 6)
6! = 720
t
(main 7)
7! = 5040
t




























Script started on 2018-02-24 23:32:47-0500
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ cat factorial.rb 
#! /usr/bin/ruby
# factorial.rb computes a factorial.
#
# Completed by: Chan Kim(ck45)
#
# Input:  n, one integer.
# Precondition: n >= 0
# Output: A factorial from n inputted value.


if __FILE__ == $0
    print "To compute n!, enter n: "
     n = gets.chomp.to_f
    
    answer = 1.0
    # for loop to compute a factorial
     for i in 2..n
        answer *= i
     end
     # output the result of the factorial
     puts "#{n}! = #{answer}"

 end
 
 ]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ruby factorial.rb 
To compute n!, enter n: 2
2.0! = 2.0
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ruby factorial.rb 
To compute n!, enter n: 3 1
1.0! = 1.0
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ruby factorial.rb 
To compute n!, enter n: 3
3.0! = 6.0
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ 
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ruby factorial.rb 
To compute n!, enter n: 44 
4.0! = 24.0
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ruby factorial.rb 
To compute n!, enter n: 5
5.0! = 120.0
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ruby factorial.rb 
To compute n!, enter n: 6
6.0! = 720.0
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ ruby factorial.rb 
To compute n!, enter n: 7
7.0! = 5040.0
]0;chan@chan:~/Sources/school/214/projects/04[chan@chan 04]$ exit
exit

Script done on 2018-02-24 23:33:28-0500
