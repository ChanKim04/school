Script started on 2018-03-17 00:27:55-0400
]0;chan@chan:~/Sources/school/214/labs/06[chan@chan 06]$ javac -deprecation Average.java 
]0;chan@chan:~/Sources/school/214/labs/06[chan@chan 06]$ java Average 
The first average is 0.0
The second average is 7.5
]0;chan@chan:~/Sources/school/214/labs/06[chan@chan 06]$ cat Average.J[Kjava 
/* Average.java is a driver for method avg().
 *
 * Started by: Prof. Adams, for CS 214 at Calvin College
 *
 * Student Name: Chan Kim (ck45)
 * Date: 3/14/2018
 *
 * Precondition: theArray, is an array of double values.
 * Output: the average of the numbers in theArray.
 ***************************************************************/

import java.io.*;

public class Average
{
  public static void main(String[] args) {

      // Replace this line with definitions of array0 and array1...
      double[] array0 = null;
      double[] array1 = {9.0, 8.0, 7.0, 6.0};
      // output the average of the values in the arrays
      System.out.println("The first average is " + avg(array0));
      System.out.println("The second average is " + avg(array1));
  }
  

  /* sum() is a method that computes the sum of all the values
   * in an array of doubles.
   * Receive: anArray, an array of doubles.
   * Return: the sum of the values in anArray.
   ************************************************************/

   // Replace this line with the definition of sum()... 
  public static double sum(double[] theArray){ 
    double total = 0.0;
    for (int i = 0; i < theArray.length; i++){
        total += theArray[i];
    }
    return total;
}


  /* avg() is a method that computes the average of the values
   * in an array.
   * Receive: anArray, an array of doubles.
   * Return: the average of the values in anArray.
   **************************************************************/
  
   // Replace this line with the definition of avg()...
  public static double avg(double anArray[])
  {
    if (anArray == null || anArray.length <= 0)
      return 0.0;
    else
      return sum(anArray) / anArray.length;
  }

}

]0;chan@chan:~/Sources/school/214/labs/06[chan@chan 06]$ end
bash: end: command not found
]0;chan@chan:~/Sources/school/214/labs/06[chan@chan 06]$ exit
exit

Script done on 2018-03-17 00:28:52-0400
Script started on 2018-03-17 00:29:14-0400
]0;chan@chan:~/Sources/school/214/labs/06[chan@chan 06]$ gnatmake average.adb 
gnatmake: "average" up to date.
]0;chan@chan:~/Sources/school/214/labs/06[chan@chan 06]$ ./average 
 average 0 is  0.00000E+00
 average 1 is  7.50000E+00
]0;chan@chan:~/Sources/school/214/labs/06[chan@chan 06]$ cat average.adb 
-- average.adb "test-drives" function Average.
-- Precondition: theArray is an array of numbers.
-- Output: the average of the numbers.
--
-- Begun by: Dr. Adams, CS 214 at Calvin College.
-- Completed by: Chan Kim (ck45)
-- Date: 3/14/2018
-----------------------------------------------

with Ada.Text_IO; use Ada.Text_IO;             -- Put(String)
with Ada.Float_Text_IO; use Ada.Float_Text_IO; -- Put(Float)

procedure Average is

-- Declare Vector type
   type Vector is array ( Positive range <>) of Float;

-- Define array0 as an array containing no values
    array0 : Vector := (0.0, 0.0);
-- Define array1 as an array containing 9, 8, 7, 6
    array1 : Vector := (9.0, 8.0, 7.0, 6.0);
----------------------------------------------
-- sum() sums the values in an array           -
-- Receive: anArray, an array of numbers     -
-- Return: the sum of the values in anArray. -
----------------------------------------------

-- Replace this line with definition of sum()
function sum(A: Vector) return Float is 
  Total : Float := 0.0; 
begin 
  for I in A'Range
  loop 
    Total := Total + A(I);
  end loop; 
  return Total; 
end sum; 

-- Replace this line with documentation and definition of average()
function average(A: Vector) return Float is
result : Float;
begin
    if A'Length = 0 then
        return 0.0;
        else
            result := sum(A) / Float(A'Length);
            return result;
    end if;
end average;

begin
   Put(" average 0 is ");
   Put( average(array0) );
   New_line;
   Put(" average 1 is ");
   Put( average(array1) );
   New_line;
end Average;

]0;chan@chan:~/Sources/school/214/labs/06[chan@chan 06]$ exit
exit

Script done on 2018-03-17 00:29:42-0400
;;; average.el "test-drives" function average().
;;; Output: the average of a sequence of numbers.
;;;
;;; Begun by: Dr. Adams, CS 214 at Calvin College.
;;; Completed by: Chan Kim (ck45)
;;; Date: 3/14/2018
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; sum() sums the values in an array.         ;;
;;; Receive: anArray, an array of numbers,   ;;
;;;          itsSize, its size.              ;;
;;; Return: the sum of the values in anArray.;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Replace this line with the definition of sum()
(defun sum (anArray itsSize)
  (if (vectorp anArray)
      (if (<= itsSize 0)
          0.0
        (+ (aref anArray (- itsSize 1)) (sum anArray (- itsSize 1))))
    nil))
sum


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; average() computes the average of an array of numbers.;;
;;; Receive: anArray, an array of numbers.              ;;
;;; Return: the average of the numbers.                 ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Replace this line with the definition of average()
(defun average (anArray itsSize)
  (if (vectorp anArray)
      (if (<= itsSize 0)
	  0.0
	(/ (sum anArray itsSize) itsSize))
    nil))
average


;;; Test function sum
(sum [] 0)
0.0



(sum [9.0 8.0 7.0 6.0] 4)
30.0



;;; Test function average
(average [] 0)
0.0


(average [9.0 8.0 7.0 6.0] 4)
7.5


Script started on 2018-03-17 00:30:02-0400
]0;chan@chan:~/Sources/school/214/labs/06[chan@chan 06]$ ca[K[Kruby average.rb
sum 0 is: 0.0
sum 1 is: 30.0
average 0 is: 0.0
average 1 is: 7.5
]0;chan@chan:~/Sources/school/214/labs/06[chan@chan 06]$ cat average.rb
# average.rb averages the values of an array of doubles.
# Precondition: theArray is an array of numbers
# Output: the average of the values in theArray
#
# Begun by: Dr. Adams, for CS 214 at Calvin College.
# Completed by: Chan Kim (ck45)
# Date: 3/14/2018
########################################################

###############################################
# sum() sums the values in an array
# Receive: anArray, an array of numbers
# Return: the sum of the values in anArray.
################################################

# Define sum() method here
def sum (theArray)
    total = 0.0
    i = 0
    until i >= theArray.size
        total += theArray[i]
        i += 1
    end
    return total
end
# Document and define average() method here
def average (anArray)
    if (anArray.length <= 0)
        return 0.0;
      else
        return sum(anArray) / anArray.length;
    end
end

def main
   # Define array0 as an Array containing no values
   array0 = Array.new []
   array1 = Array.new [9.0, 8.0, 7.0, 6.0]
   # Define array1 as an Array containing 9.0, 8.0, 7.0, 6.0

   puts "sum 0 is: #{ sum(array0) }\n"
   puts "sum 1 is: #{ sum(array1) }\n"

   puts "average 0 is: #{ average(array0) }\n"
   puts "average 1 is: #{ average(array1) }\n"
end

main

]0;chan@chan:~/Sources/school/214/labs/06[chan@chan 06]$ exit
exit

Script done on 2018-03-17 00:30:17-0400
