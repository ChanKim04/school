Script started on 2018-03-02 09:26:57-0500
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ cat Split.java 
/* Split.java is a class and program that splits a string
 * into two substrings.
 * 
 * Begun by: Serita Nelesen
 * Completed by: Chan Kim (ck45)
 ***************************************************************/

import java.util.Scanner;

// java class Split
public class Split
{
  // main program
  public static void main(String[] args)
    {
      Scanner keyboard = new Scanner(System.in);
      // prompt for the string
      System.out.println("\nTo split a string, enter the string: ");
      String theString = keyboard.next();
      
      // prompt for splitting position
      System.out.println("\nEnter the split position: ");
      int position = keyboard.nextInt();

      //Create list, compute results and print
      String [] resultList = new String[2];
      splitter(theString, position, resultList);
      System.out.println("\nThe first part is " + resultList[0] + "\n and the second part is " + resultList[1]);
      
    }
  
  /* splitter() splits a string according to the position specified
   * Receive: 	theString - the string to be split
   * 		pos - the position at which to split
   *            resList - an array of strings in which to place results
   *****************************************************/
  // replace this line with a definition for splitter
  public static void splitter(String theString, int pos, String[] results)
  {
      results[0] = theString.substring(0, pos);
      results[1] = theString.substring(pos, theString.length());
  }
}
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ javac -deprecation J[KSplit.java 
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ java Split 

To split a string, enter the string: 
hello

Enter the split position: 
5

The first part is hello
 and the second part is 
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ java Split 

To split a string, enter the string: 
hello

Enter the split position: 
3

The first part is hel
 and the second part is lo
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ java Split 

To split a string, enter the string: 
hello

Enter the split position: 
0

The first part is 
 and the second part is hello
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ exit
exit

Script done on 2018-03-02 09:27:33-0500
Script started on 2018-03-02 09:24:26-0500
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ ca[K[Kls
Makefile  script.ada    script.ruby  split.adb  Split.class  [0m[01;32mSplit.java[0m  split.rb
[01;34mold[0m       script.elisp  [01;32msplit[0m        split.ali  split.el     split.o
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ cat split.adb
-- split.adb splits an input string about a specified position.
--
-- Input: Astring, a string,
--        Pos, an integer.
-- Precondition: pos is in Astring'Range.
-- Output: The substrings Astring(Astring'First..Pos-1) and
--                        Astring(Pos..Astring'Last).
--
-- Begun by: Dr. Adams, for CS 214 at Calvin College.
-- Completed by: Chan Kim (ck45)
-- Date: 3/2/2018
--------------------------------------------------------------

with Ada.Text_IO, Ada.Integer_Text_IO, Ada.Strings.Fixed;
use  Ada.Text_IO, Ada.Integer_Text_IO, Ada.Strings.Fixed;

procedure split is

   EMPTY_STRING : String := "                                        ";

   Astring, Part1, Part2 : String  := EMPTY_STRING;
   Pos, Chars_read       : Natural;

   ------------------------------------------------
   --  split() splits a string in two.           
   -- Receive: The_String, the string to be split,
   --          Position, the split index.        
   -- PRE: 0 < Position <= The_String.length(). 
   --     (Ada arrays are 1-relative by default)
   -- Passback: First_Part - the first substring,
   --           Last_Part - the second substring.
   ------------------------------------------------
   -- Replace this line with definition of split() 
procedure Split(The_String: in string; Position: in integer; First_Part: out string; Last_Part: out string) is
    begin
    Move(The_String(The_String'First .. Position), First_Part);
    Move(The_String(Position+1 .. The_String'Last), Last_Part);
    end Split;

begin                                           -- Prompt for input
   Put("To split a string, enter the string: ");
   Get_Line(Astring, Chars_Read);
   Put("Enter the split position: ");
   Get(Pos);

   split(Astring, Pos, Part1, Part2);

   Put("The first part is ");
   Put_Line(Part1);
   Put(" and the second part is ");
   Put_Line(Part2);

end split;

]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ gnatmake split.adb 
gcc -c split.adb
gnatbind -x split.ali
gnatlink split.ali
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ ./split 
To split a string, enter the string: hello
Enter the split position: 5
The first part is hello                                   
 and the second part is                                         
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ ./split 
To split a string, enter the string: 3
Enter the split position: ^C
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ ./split 
To split a string, enter the string: hello
Enter the split position: 3
The first part is hel                                     
 and the second part is lo                                      
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ ./split 
To split a string, enter the string: hello
Enter the split position: 0
The first part is                                         
 and the second part is hello                                   
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ exit
exit

Script done on 2018-03-02 09:25:38-0500
;;; split.el splits a string into two substrings.
;;;
;;; Input: aString, the string to be split,
;;;        pos, the split position.
;;; Output: the substring of aString before pos, and
;;;         the substring of aString from pos onwards.
;;;
;;; Begun by: Dr. Adams, for CS 214 at Calvin College.
;;; Completed by: Chan Kim (ck45)
;;; Date: 3/2/2018
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:;
;;; split() splits a string into its two substrings.  
;;; Receive: aString, the string to be split,         
;;;        pos, the split position.                   
;;; PRE: 0 <= pos < the length of aString.
;;; Return: the substring of aString before pos, and  
;;;         the substring of aString from pos onwards.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Replace this line with the definition of split()
(defun split (aString pos)
  "split() splits a string into its two substrings."
  (setq firstPart (substring aString 0 pos))
  (setq lastPart (substring aString pos))
  (list firstPart lastPart))


(defun main (aString pos)
  (interactive "sEnter the string to be split: \nnEnter the split position")
  (setq result (split aString pos))
  (setq part1 (elt result 0))
  (setq part2 (elt result 1))
  (message "The first part is %s and the second part is %s" part1 part2))


(main "hello" 0)
"The first part is  and the second part is hello"



(main "hello" 3)
"The first part is hel and the second part is lo"



(main "hello" 5)
"The first part is hello and the second part is "

   
Script started on 2018-03-02 09:23:36-0500
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ ls
Makefile  [0m[01;34mold[0m  script.elisp  script.ruby  [01;32msplit[0m  split.adb  split.ali  Split.class  split.el  [01;32mSplit.java[0m  split.o  split.rb
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ cat scri[K[K[K[Ksplit.rb
# split.rb splits a string into two substrings.
#
# Input: A string and an integer string position to split the string by.
# Precondition: The position integer is within the range of the string size.
# Output: The substrings aString(0, position - 1) and
#   aString(pos, length() - 1).
#
# Begun by: Prof. Adams, for CS 214 at Calvin College.
# Completed by: Chan Kim (ck45)
# Date: 3/2/2018
#################################################################


# split() splits a string into its two substrings.
# Receive: aString, the string to be split,       
#        pos, the split position.                  
# PRE: 0 <= pos < the length of aString.
# Return: the substring of aString before pos, and  
#         the substring of aString from pos onwards.
######################################################

# Replace this line with the definition of split()
def split(aString, pos)
  substrings = []
  substrings[0] = aString[0, pos]
  substrings[1] = aString[pos, aString.size]
  substrings
end


def main
  print "To split a string, enter the string: "; 
  the_string = gets
  print "Enter the split position: "; 
  position = gets.to_i
  split_string = split(the_string, position)
  puts "The first part is: " << split_string[0]
  puts "and the second part is: " << split_string[1]
end

main
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ ruby split.rb
To split a string, enter the string: helo    hello
Enter the split position: 5
The first part is: hello
and the second part is: 
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ ruby split.rb
To split a string, enter the string: hello
Enter the split position: 3
The first part is: hel
and the second part is: lo
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ ruby split.rb
To split a string, enter the string: hello
Enter the split position: 0
The first part is: 
and the second part is: hello
]0;chan@chan:~/Sources/school/214/labs/05[chan@chan 05]$ exit
exit

Script done on 2018-03-02 09:24:11-0500
